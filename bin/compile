#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

WHITE="\e[97m"
GREEN="\e[32m"
YELLOW="\e[33m"
CYAN="\e[36m"

BUILD_DIR=$1
CACHE_DIR=$2

BIN_PATH="$BUILD_DIR/bin"
LIB_PATH="$BUILD_DIR/vendor/wkhtmltox/lib"
TMP_PATH="$BUILD_DIR/tmp"
mkdir -p $CACHE_DIR $BIN_PATH $LIB_PATH $TMP_PATH

OS_VERSIONCODE=$(cat /etc/os-release | grep VERSION_CODENAME)

if [[ "$OS_VERSIONCODE" == *"VERSION_CODENAME=focal"* ]]; then
    # focal is codename of ubuntu 20
    UBUNTU_VERSION="focal"
elif [[ "$OS_VERSIONCODE" == *"VERSION_CODENAME=xenial"* ]]; then
    # install wkhtmltopdf for ubuntu 16
    UBUNTU_VERSION="xenial"
else
    # default version is for ubuntu 16
    echo -e "${YELLOW}WARNING: ${OS_VERSIONCODE} not supported, install default wkhtmltopdf deb for Ubuntu 16${WHITE}"
    UBUNTU_VERSION="xenial"
fi

WKHTMLTOPDF_URL="https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.${UBUNTU_VERSION}_amd64.deb"
WKHTMLTOPDF_PKG="$CACHE_DIR/wkhtmltopdf.deb"
WKHTMLTOPDF_PATH="$TMP_PATH/wkhtmltopdf"
WKHTMLTOPDF_BINARIES="$WKHTMLTOPDF_PATH/usr/local/bin"

BIN_DIR=$(cd $(dirname $0); pwd)
FONTS_DIR=$(cd "$BIN_DIR/../fonts"; pwd)

if [ -f $WKHTMLTOPDF_PKG ]; then
  echo -e "${GREEN}-----> Using wkhtmltopdf Debian package from cache${WHITE}"
else
  echo -e "${GREEN}-----> Downloading wkhtmltopdf Debian package from ${WKHTMLTOPDF_URL} ${WHITE}"
  curl -L $WKHTMLTOPDF_URL -o $WKHTMLTOPDF_PKG
fi

LIBPNG12_URL='https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/15108504/+files/libpng12-0_1.2.54-1ubuntu1.1_amd64.deb'
LIBPNG12_PKG="$CACHE_DIR/libpng12.deb"
LIBPNG12_PATH="$TMP_PATH/libpng12"
LIBPNG12_BINARY="$LIBPNG12_PATH/usr/lib/x86_64-linux-gnu"

echo -e "${CYAN} Downloading libpng from ${LIBPNG12_URL} ${WHITE}"
curl -L $LIBPNG12_URL -o $LIBPNG12_PKG

echo -e "${GREEN}-----> Unpacking Debian package${WHITE}"
dpkg -x $WKHTMLTOPDF_PKG $WKHTMLTOPDF_PATH
dpkg -x $LIBPNG12_PKG $LIBPNG12_PATH

echo -e "${GREEN}-----> Setting permissions"
chmod +x $WKHTMLTOPDF_BINARIES/*

echo -e "${GREEN}-----> Moving binaries to the right place${WHITE}"
mv $WKHTMLTOPDF_BINARIES/* $BIN_PATH/
mv $LIBPNG12_BINARY/libpng12.so.0 $LIB_PATH/libpng12.so.0

echo -e "${GREEN}-----> Removing wkhtmltoimage binary${WHITE}"
rm -rf "$BIN_PATH/wkhtmltoimage"

echo -e "${GREEN}-----> Setting Continer Start script in $BUILD_DIR/.profile.d${WHITE}"
mkdir -p "$BUILD_DIR"/.profile.d
cat <<EOF >"$BUILD_DIR"/.profile.d/wkhtmltopdf.sh
export PATH="/app/bin:\$PATH"
export LD_LIBRARY_PATH="/app/vendor/wkhtmltox/lib:\$LD_LIBRARY_PATH"
EOF

echo -e "${GREEN}-----> Cleaning up${WHITE}"
rm -rf $WKHTMLTOPDF_PATH
rm -rf $LIBPNG12_PATH

echo -e "${GREEN}-----> Installing fonts${WHITE}"
mkdir -p $1/.fonts
ls $FONTS_DIR
cp $FONTS_DIR/* $1/.fonts/
fc-cache -f $1/.fonts
